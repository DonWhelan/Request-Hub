{"filter":false,"title":"encrypt.php","tooltip":"/Steganography/encrypt.php","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":34,"column":6},"action":"insert","lines":["    <?php ","        // ref: http://thedebuggers.com/image-steganography-hiding-text-using-php/","        include('functions.php');","        $string_to_be_hidden = '123456';","        $stringLength = strlen($string_to_be_hidden);","        $fillerChars = 11 - $stringLength;","        // has to encode a exact amount of charicters, adds whitespace if $string_to_be_hidden is less than the amount","        for($i=0;$i<$fillerChars;$i++){","            $string_to_be_hidden .= ' ';","        }","        // changes string into binary","        $binaryString = toBinary($string_to_be_hidden);","        $binaryStringLength = strlen($binaryString);","        $image = '12.jpg';","        $im = imagecreatefromjpeg($image);","        // Changes the last binary bit from each pixel to one from $binaryString","        for($i=0;$i<$binaryStringLength;$i++){","          $y = $i;","          $rgb = imagecolorat($im,$i,$y);","          $r = ($rgb >>16) & 0xFF;","          $g = ($rgb >>8) & 0xFF;","          $b = $rgb & 0xFF;","          // changes last chars to binary","          $newB = toBinary($b);","          // replaces last bit with the one from the $binaryString","          $newB[strlen($newB)-1] = $binaryString[$i];","          // changes the binary back ","          $newB = bin2txt($newB);","          // adds the amended blue to the pixle","          $new_color = imagecolorallocate($im,$r,$g,$newB);","          imagesetpixel($im,$i,$y,$new_color);","        }","        imagepng($im,'simple.png');","        imagedestroy($im);","    ?>"],"id":1}],[{"start":{"row":13,"column":19},"end":{"row":13,"column":20},"action":"remove","lines":["2"],"id":2},{"start":{"row":13,"column":18},"end":{"row":13,"column":19},"action":"remove","lines":["1"]}],[{"start":{"row":13,"column":18},"end":{"row":13,"column":31},"action":"insert","lines":["grizzly-bear2"],"id":3}],[{"start":{"row":32,"column":22},"end":{"row":32,"column":28},"action":"remove","lines":["simple"],"id":4},{"start":{"row":32,"column":22},"end":{"row":32,"column":23},"action":"insert","lines":["s"]},{"start":{"row":32,"column":23},"end":{"row":32,"column":24},"action":"insert","lines":["t"]},{"start":{"row":32,"column":24},"end":{"row":32,"column":25},"action":"insert","lines":["e"]},{"start":{"row":32,"column":25},"end":{"row":32,"column":26},"action":"insert","lines":["g"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":26,"column":37},"end":{"row":26,"column":37},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1522236178041,"hash":"b91a20b6f1ad298b18f3fcba4343a08ff2c7f902"}